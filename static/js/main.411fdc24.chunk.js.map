{"version":3,"sources":["apis/todos.js","components/TodoTitle.js","components/TodoAdd.js","components/TodoItem.js","components/TodoList.js","components/App.js","hooks/useTodo.js","index.js"],"names":["todoDataUrl","getAllTodosData","axios","get","response","data","addTodoData","todo","post","deleteTodoData","id","delete","updateTodoData","put","TodoTitle","memo","title","as","TodoAdd","buttonText","inputEl","handleAddTodoListItem","ref","onClick","TodoItem","toggleTodoListItemStatus","deleteTodoListItem","content","done","TodoList","todoList","length","map","App","useState","setTodoList","useEffect","todoData","then","reverse","todoItem","find","item","newTodoItem","updatedTodo","newTodoList","addTodoListItem","todoContent","ulid","addTodo","deleteListItemId","filter","useTodo","useRef","inCompletedList","completedList","current","value","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.411fdc24.chunk.js","sourcesContent":["import axios from \"axios\";\nconst todoDataUrl = \"http://localhost:3100/todos\";\nexport const getAllTodosData = async () => {\n  const response = await axios.get(todoDataUrl);\n  return response.data;\n};\n\nexport const addTodoData = async (todo) => {\n  const response = await axios.post(todoDataUrl, todo);\n  return response.data;\n};\nexport const deleteTodoData = async (id) => {\n  await axios.delete(`${todoDataUrl}/${id}`);\n  return id;\n};\nexport const updateTodoData = async (id, todo) => {\n  const response = await axios.put(`${todoDataUrl}/${id}`, todo);\n  return response.data;\n};\n","import React, { memo } from \"react\";\n\nexport const TodoTitle = memo(({ title, as }) => {\n  if (as === \"h1\") return <h1>{title}</h1>;\n  if (as === \"h2\") return <h2>{title}</h2>;\n  return <p>{title}</p>;\n});\n","export const TodoAdd = ({ buttonText, inputEl, handleAddTodoListItem }) => {\n  return (\n    <>\n      <textarea ref={inputEl} />\n      <button onClick={handleAddTodoListItem}>{buttonText}</button>\n    </>\n  );\n};\n","export const TodoItem = ({\n  todo,\n  toggleTodoListItemStatus,\n  deleteTodoListItem\n}) => {\n  const handleToggleTodoListItemStatus = () =>\n    toggleTodoListItemStatus(todo.id, todo.done);\n  const handleDeleteTodoListItem = () => deleteTodoListItem(todo.id);\n\n  return (\n    <li>\n      {todo.content}\n      <button onClick={handleToggleTodoListItemStatus}>\n        {todo.done ? \"未完了リストへ\" : \"完了リストへ\"}\n      </button>\n      <button onClick={handleDeleteTodoListItem}>削除</button>\n    </li>\n  );\n};\n","import { TodoTitle } from \"./TodoTitle\";\nimport { TodoItem } from \"./TodoItem\";\n\nexport const TodoList = ({\n  todoList,\n  toggleTodoListItemStatus,\n  deleteTodoListItem,\n  title,\n  as\n}) => {\n  return (\n    <>\n      {todoList.length !== 0 && (\n        <>\n          <TodoTitle title={title} as={as} />\n          <ul>\n            {todoList.map((todo) => (\n              <TodoItem\n                todo={todo}\n                key={todo.id}\n                toggleTodoListItemStatus={toggleTodoListItemStatus}\n                deleteTodoListItem={deleteTodoListItem}\n              />\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\n","import React, { useRef } from \"react\";\n\nimport { useTodo } from \"../hooks/useTodo\";\nimport { TodoTitle } from \"./TodoTitle\";\nimport { TodoAdd } from \"./TodoAdd\";\nimport { TodoList } from \"./TodoList\";\n\nfunction App() {\n  const {\n    todoList,\n    addTodoListItem,\n    toggleTodoListItemStatus,\n    deleteTodoListItem\n  } = useTodo();\n\n  const inputEl = useRef(null);\n\n  const handleAddTodoListItem = () => {\n    if (inputEl.current.value === \"\") return;\n    addTodoListItem(inputEl.current.value);\n    inputEl.current.value = \"\";\n  };\n\n  const inCompletedList = todoList.filter((todo) => {\n    return !todo.done;\n  });\n\n  const completedList = todoList.filter((todo) => {\n    return todo.done;\n  });\n\n  return (\n    <>\n      <TodoTitle title=\"TODO進捗管理\" as=\"h1\" />\n      <TodoAdd\n        buttonText=\"+ TODOを追加\"\n        inputEl={inputEl}\n        handleAddTodoListItem={handleAddTodoListItem}\n      />\n      <TodoList\n        todoList={inCompletedList}\n        toggleTodoListItemStatus={toggleTodoListItemStatus}\n        deleteTodoListItem={deleteTodoListItem}\n        title=\"未完了TODOリスト\"\n        as=\"h2\"\n      />\n      <TodoList\n        todoList={completedList}\n        toggleTodoListItemStatus={toggleTodoListItemStatus}\n        deleteTodoListItem={deleteTodoListItem}\n        title=\"完了TODOリスト\"\n        as=\"h2\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\n\nimport { ulid } from \"ulid\";\n\nimport * as todoData from \"../apis/todos\";\n\nexport const useTodo = () => {\n  const [todoList, setTodoList] = useState([]);\n\n  useEffect(() => {\n    todoData.getAllTodosData().then((todo) => {\n      setTodoList([...todo].reverse());\n    });\n  }, []);\n\n  const toggleTodoListItemStatus = (id, done) => {\n    const todoItem = todoList.find((item) => item.id === id);\n    const newTodoItem = { ...todoItem, done: !done };\n    todoData.updateTodoData(id, newTodoItem).then((updatedTodo) => {\n      const newTodoList = todoList.map((item) =>\n        item.id !== updatedTodo.id ? item : updatedTodo\n      );\n      setTodoList(newTodoList);\n    });\n  };\n  const addTodoListItem = (todoContent) => {\n    const newTodoItem = {\n      content: todoContent,\n      id: ulid(),\n      done: false\n    };\n    return todoData.addTodoData(newTodoItem).then((addTodo) => {\n      setTodoList([addTodo, ...todoList]);\n    });\n  };\n  const deleteTodoListItem = (id) => {\n    todoData.deleteTodoData(id).then((deleteListItemId) => {\n      const newTodoList = todoList.filter(\n        (item) => item.id !== deleteListItemId\n      );\n      setTodoList(newTodoList);\n    });\n  };\n\n  return {\n    todoList,\n    toggleTodoListItemStatus,\n    addTodoListItem,\n    deleteTodoListItem\n  };\n};\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}